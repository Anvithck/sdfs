// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: VolumeService.proto

package org.opendedup.grpc;

/**
 * Protobuf type {@code org.opendedup.grpc.SystemInfo}
 */
public  final class SystemInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:org.opendedup.grpc.SystemInfo)
    SystemInfoOrBuilder {
private static final long serialVersionUID = 0L;
  // Use SystemInfo.newBuilder() to construct.
  private SystemInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SystemInfo() {
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new SystemInfo();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private SystemInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            activeThreads_ = input.readInt32();
            break;
          }
          case 16: {

            blocksStored_ = input.readInt32();
            break;
          }
          case 24: {

            maxBlocksStored_ = input.readInt32();
            break;
          }
          case 32: {

            totalSpace_ = input.readInt64();
            break;
          }
          case 40: {

            freeSpace_ = input.readInt64();
            break;
          }
          case 49: {

            totalCpuLoad_ = input.readDouble();
            break;
          }
          case 57: {

            cpuCores_ = input.readDouble();
            break;
          }
          case 65: {

            sdfsCpuLoad_ = input.readDouble();
            break;
          }
          case 81: {

            totalMemory_ = input.readDouble();
            break;
          }
          case 89: {

            freeMemory_ = input.readDouble();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.opendedup.grpc.VolumeServiceOuterClass.internal_static_org_opendedup_grpc_SystemInfo_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.opendedup.grpc.VolumeServiceOuterClass.internal_static_org_opendedup_grpc_SystemInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.opendedup.grpc.SystemInfo.class, org.opendedup.grpc.SystemInfo.Builder.class);
  }

  public static final int ACTIVETHREADS_FIELD_NUMBER = 1;
  private int activeThreads_;
  /**
   * <code>int32 activeThreads = 1;</code>
   * @return The activeThreads.
   */
  public int getActiveThreads() {
    return activeThreads_;
  }

  public static final int BLOCKSSTORED_FIELD_NUMBER = 2;
  private int blocksStored_;
  /**
   * <code>int32 blocksStored = 2;</code>
   * @return The blocksStored.
   */
  public int getBlocksStored() {
    return blocksStored_;
  }

  public static final int MAXBLOCKSSTORED_FIELD_NUMBER = 3;
  private int maxBlocksStored_;
  /**
   * <code>int32 maxBlocksStored = 3;</code>
   * @return The maxBlocksStored.
   */
  public int getMaxBlocksStored() {
    return maxBlocksStored_;
  }

  public static final int TOTALSPACE_FIELD_NUMBER = 4;
  private long totalSpace_;
  /**
   * <code>int64 totalSpace = 4;</code>
   * @return The totalSpace.
   */
  public long getTotalSpace() {
    return totalSpace_;
  }

  public static final int FREESPACE_FIELD_NUMBER = 5;
  private long freeSpace_;
  /**
   * <code>int64 freeSpace = 5;</code>
   * @return The freeSpace.
   */
  public long getFreeSpace() {
    return freeSpace_;
  }

  public static final int TOTALCPULOAD_FIELD_NUMBER = 6;
  private double totalCpuLoad_;
  /**
   * <code>double totalCpuLoad = 6;</code>
   * @return The totalCpuLoad.
   */
  public double getTotalCpuLoad() {
    return totalCpuLoad_;
  }

  public static final int CPUCORES_FIELD_NUMBER = 7;
  private double cpuCores_;
  /**
   * <code>double cpuCores = 7;</code>
   * @return The cpuCores.
   */
  public double getCpuCores() {
    return cpuCores_;
  }

  public static final int SDFSCPULOAD_FIELD_NUMBER = 8;
  private double sdfsCpuLoad_;
  /**
   * <code>double sdfsCpuLoad = 8;</code>
   * @return The sdfsCpuLoad.
   */
  public double getSdfsCpuLoad() {
    return sdfsCpuLoad_;
  }

  public static final int TOTALMEMORY_FIELD_NUMBER = 10;
  private double totalMemory_;
  /**
   * <code>double totalMemory = 10;</code>
   * @return The totalMemory.
   */
  public double getTotalMemory() {
    return totalMemory_;
  }

  public static final int FREEMEMORY_FIELD_NUMBER = 11;
  private double freeMemory_;
  /**
   * <code>double freeMemory = 11;</code>
   * @return The freeMemory.
   */
  public double getFreeMemory() {
    return freeMemory_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (activeThreads_ != 0) {
      output.writeInt32(1, activeThreads_);
    }
    if (blocksStored_ != 0) {
      output.writeInt32(2, blocksStored_);
    }
    if (maxBlocksStored_ != 0) {
      output.writeInt32(3, maxBlocksStored_);
    }
    if (totalSpace_ != 0L) {
      output.writeInt64(4, totalSpace_);
    }
    if (freeSpace_ != 0L) {
      output.writeInt64(5, freeSpace_);
    }
    if (totalCpuLoad_ != 0D) {
      output.writeDouble(6, totalCpuLoad_);
    }
    if (cpuCores_ != 0D) {
      output.writeDouble(7, cpuCores_);
    }
    if (sdfsCpuLoad_ != 0D) {
      output.writeDouble(8, sdfsCpuLoad_);
    }
    if (totalMemory_ != 0D) {
      output.writeDouble(10, totalMemory_);
    }
    if (freeMemory_ != 0D) {
      output.writeDouble(11, freeMemory_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (activeThreads_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, activeThreads_);
    }
    if (blocksStored_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, blocksStored_);
    }
    if (maxBlocksStored_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, maxBlocksStored_);
    }
    if (totalSpace_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, totalSpace_);
    }
    if (freeSpace_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(5, freeSpace_);
    }
    if (totalCpuLoad_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(6, totalCpuLoad_);
    }
    if (cpuCores_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(7, cpuCores_);
    }
    if (sdfsCpuLoad_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(8, sdfsCpuLoad_);
    }
    if (totalMemory_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(10, totalMemory_);
    }
    if (freeMemory_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(11, freeMemory_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.opendedup.grpc.SystemInfo)) {
      return super.equals(obj);
    }
    org.opendedup.grpc.SystemInfo other = (org.opendedup.grpc.SystemInfo) obj;

    if (getActiveThreads()
        != other.getActiveThreads()) return false;
    if (getBlocksStored()
        != other.getBlocksStored()) return false;
    if (getMaxBlocksStored()
        != other.getMaxBlocksStored()) return false;
    if (getTotalSpace()
        != other.getTotalSpace()) return false;
    if (getFreeSpace()
        != other.getFreeSpace()) return false;
    if (java.lang.Double.doubleToLongBits(getTotalCpuLoad())
        != java.lang.Double.doubleToLongBits(
            other.getTotalCpuLoad())) return false;
    if (java.lang.Double.doubleToLongBits(getCpuCores())
        != java.lang.Double.doubleToLongBits(
            other.getCpuCores())) return false;
    if (java.lang.Double.doubleToLongBits(getSdfsCpuLoad())
        != java.lang.Double.doubleToLongBits(
            other.getSdfsCpuLoad())) return false;
    if (java.lang.Double.doubleToLongBits(getTotalMemory())
        != java.lang.Double.doubleToLongBits(
            other.getTotalMemory())) return false;
    if (java.lang.Double.doubleToLongBits(getFreeMemory())
        != java.lang.Double.doubleToLongBits(
            other.getFreeMemory())) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + ACTIVETHREADS_FIELD_NUMBER;
    hash = (53 * hash) + getActiveThreads();
    hash = (37 * hash) + BLOCKSSTORED_FIELD_NUMBER;
    hash = (53 * hash) + getBlocksStored();
    hash = (37 * hash) + MAXBLOCKSSTORED_FIELD_NUMBER;
    hash = (53 * hash) + getMaxBlocksStored();
    hash = (37 * hash) + TOTALSPACE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getTotalSpace());
    hash = (37 * hash) + FREESPACE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getFreeSpace());
    hash = (37 * hash) + TOTALCPULOAD_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getTotalCpuLoad()));
    hash = (37 * hash) + CPUCORES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getCpuCores()));
    hash = (37 * hash) + SDFSCPULOAD_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getSdfsCpuLoad()));
    hash = (37 * hash) + TOTALMEMORY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getTotalMemory()));
    hash = (37 * hash) + FREEMEMORY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getFreeMemory()));
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.opendedup.grpc.SystemInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.opendedup.grpc.SystemInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.opendedup.grpc.SystemInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.opendedup.grpc.SystemInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.opendedup.grpc.SystemInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.opendedup.grpc.SystemInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.opendedup.grpc.SystemInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.opendedup.grpc.SystemInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.opendedup.grpc.SystemInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.opendedup.grpc.SystemInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.opendedup.grpc.SystemInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.opendedup.grpc.SystemInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.opendedup.grpc.SystemInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code org.opendedup.grpc.SystemInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.opendedup.grpc.SystemInfo)
      org.opendedup.grpc.SystemInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.opendedup.grpc.VolumeServiceOuterClass.internal_static_org_opendedup_grpc_SystemInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.opendedup.grpc.VolumeServiceOuterClass.internal_static_org_opendedup_grpc_SystemInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.opendedup.grpc.SystemInfo.class, org.opendedup.grpc.SystemInfo.Builder.class);
    }

    // Construct using org.opendedup.grpc.SystemInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      activeThreads_ = 0;

      blocksStored_ = 0;

      maxBlocksStored_ = 0;

      totalSpace_ = 0L;

      freeSpace_ = 0L;

      totalCpuLoad_ = 0D;

      cpuCores_ = 0D;

      sdfsCpuLoad_ = 0D;

      totalMemory_ = 0D;

      freeMemory_ = 0D;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.opendedup.grpc.VolumeServiceOuterClass.internal_static_org_opendedup_grpc_SystemInfo_descriptor;
    }

    @java.lang.Override
    public org.opendedup.grpc.SystemInfo getDefaultInstanceForType() {
      return org.opendedup.grpc.SystemInfo.getDefaultInstance();
    }

    @java.lang.Override
    public org.opendedup.grpc.SystemInfo build() {
      org.opendedup.grpc.SystemInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.opendedup.grpc.SystemInfo buildPartial() {
      org.opendedup.grpc.SystemInfo result = new org.opendedup.grpc.SystemInfo(this);
      result.activeThreads_ = activeThreads_;
      result.blocksStored_ = blocksStored_;
      result.maxBlocksStored_ = maxBlocksStored_;
      result.totalSpace_ = totalSpace_;
      result.freeSpace_ = freeSpace_;
      result.totalCpuLoad_ = totalCpuLoad_;
      result.cpuCores_ = cpuCores_;
      result.sdfsCpuLoad_ = sdfsCpuLoad_;
      result.totalMemory_ = totalMemory_;
      result.freeMemory_ = freeMemory_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.opendedup.grpc.SystemInfo) {
        return mergeFrom((org.opendedup.grpc.SystemInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.opendedup.grpc.SystemInfo other) {
      if (other == org.opendedup.grpc.SystemInfo.getDefaultInstance()) return this;
      if (other.getActiveThreads() != 0) {
        setActiveThreads(other.getActiveThreads());
      }
      if (other.getBlocksStored() != 0) {
        setBlocksStored(other.getBlocksStored());
      }
      if (other.getMaxBlocksStored() != 0) {
        setMaxBlocksStored(other.getMaxBlocksStored());
      }
      if (other.getTotalSpace() != 0L) {
        setTotalSpace(other.getTotalSpace());
      }
      if (other.getFreeSpace() != 0L) {
        setFreeSpace(other.getFreeSpace());
      }
      if (other.getTotalCpuLoad() != 0D) {
        setTotalCpuLoad(other.getTotalCpuLoad());
      }
      if (other.getCpuCores() != 0D) {
        setCpuCores(other.getCpuCores());
      }
      if (other.getSdfsCpuLoad() != 0D) {
        setSdfsCpuLoad(other.getSdfsCpuLoad());
      }
      if (other.getTotalMemory() != 0D) {
        setTotalMemory(other.getTotalMemory());
      }
      if (other.getFreeMemory() != 0D) {
        setFreeMemory(other.getFreeMemory());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.opendedup.grpc.SystemInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.opendedup.grpc.SystemInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int activeThreads_ ;
    /**
     * <code>int32 activeThreads = 1;</code>
     * @return The activeThreads.
     */
    public int getActiveThreads() {
      return activeThreads_;
    }
    /**
     * <code>int32 activeThreads = 1;</code>
     * @param value The activeThreads to set.
     * @return This builder for chaining.
     */
    public Builder setActiveThreads(int value) {
      
      activeThreads_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 activeThreads = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearActiveThreads() {
      
      activeThreads_ = 0;
      onChanged();
      return this;
    }

    private int blocksStored_ ;
    /**
     * <code>int32 blocksStored = 2;</code>
     * @return The blocksStored.
     */
    public int getBlocksStored() {
      return blocksStored_;
    }
    /**
     * <code>int32 blocksStored = 2;</code>
     * @param value The blocksStored to set.
     * @return This builder for chaining.
     */
    public Builder setBlocksStored(int value) {
      
      blocksStored_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 blocksStored = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearBlocksStored() {
      
      blocksStored_ = 0;
      onChanged();
      return this;
    }

    private int maxBlocksStored_ ;
    /**
     * <code>int32 maxBlocksStored = 3;</code>
     * @return The maxBlocksStored.
     */
    public int getMaxBlocksStored() {
      return maxBlocksStored_;
    }
    /**
     * <code>int32 maxBlocksStored = 3;</code>
     * @param value The maxBlocksStored to set.
     * @return This builder for chaining.
     */
    public Builder setMaxBlocksStored(int value) {
      
      maxBlocksStored_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 maxBlocksStored = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearMaxBlocksStored() {
      
      maxBlocksStored_ = 0;
      onChanged();
      return this;
    }

    private long totalSpace_ ;
    /**
     * <code>int64 totalSpace = 4;</code>
     * @return The totalSpace.
     */
    public long getTotalSpace() {
      return totalSpace_;
    }
    /**
     * <code>int64 totalSpace = 4;</code>
     * @param value The totalSpace to set.
     * @return This builder for chaining.
     */
    public Builder setTotalSpace(long value) {
      
      totalSpace_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 totalSpace = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalSpace() {
      
      totalSpace_ = 0L;
      onChanged();
      return this;
    }

    private long freeSpace_ ;
    /**
     * <code>int64 freeSpace = 5;</code>
     * @return The freeSpace.
     */
    public long getFreeSpace() {
      return freeSpace_;
    }
    /**
     * <code>int64 freeSpace = 5;</code>
     * @param value The freeSpace to set.
     * @return This builder for chaining.
     */
    public Builder setFreeSpace(long value) {
      
      freeSpace_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 freeSpace = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearFreeSpace() {
      
      freeSpace_ = 0L;
      onChanged();
      return this;
    }

    private double totalCpuLoad_ ;
    /**
     * <code>double totalCpuLoad = 6;</code>
     * @return The totalCpuLoad.
     */
    public double getTotalCpuLoad() {
      return totalCpuLoad_;
    }
    /**
     * <code>double totalCpuLoad = 6;</code>
     * @param value The totalCpuLoad to set.
     * @return This builder for chaining.
     */
    public Builder setTotalCpuLoad(double value) {
      
      totalCpuLoad_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double totalCpuLoad = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalCpuLoad() {
      
      totalCpuLoad_ = 0D;
      onChanged();
      return this;
    }

    private double cpuCores_ ;
    /**
     * <code>double cpuCores = 7;</code>
     * @return The cpuCores.
     */
    public double getCpuCores() {
      return cpuCores_;
    }
    /**
     * <code>double cpuCores = 7;</code>
     * @param value The cpuCores to set.
     * @return This builder for chaining.
     */
    public Builder setCpuCores(double value) {
      
      cpuCores_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double cpuCores = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearCpuCores() {
      
      cpuCores_ = 0D;
      onChanged();
      return this;
    }

    private double sdfsCpuLoad_ ;
    /**
     * <code>double sdfsCpuLoad = 8;</code>
     * @return The sdfsCpuLoad.
     */
    public double getSdfsCpuLoad() {
      return sdfsCpuLoad_;
    }
    /**
     * <code>double sdfsCpuLoad = 8;</code>
     * @param value The sdfsCpuLoad to set.
     * @return This builder for chaining.
     */
    public Builder setSdfsCpuLoad(double value) {
      
      sdfsCpuLoad_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double sdfsCpuLoad = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearSdfsCpuLoad() {
      
      sdfsCpuLoad_ = 0D;
      onChanged();
      return this;
    }

    private double totalMemory_ ;
    /**
     * <code>double totalMemory = 10;</code>
     * @return The totalMemory.
     */
    public double getTotalMemory() {
      return totalMemory_;
    }
    /**
     * <code>double totalMemory = 10;</code>
     * @param value The totalMemory to set.
     * @return This builder for chaining.
     */
    public Builder setTotalMemory(double value) {
      
      totalMemory_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double totalMemory = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearTotalMemory() {
      
      totalMemory_ = 0D;
      onChanged();
      return this;
    }

    private double freeMemory_ ;
    /**
     * <code>double freeMemory = 11;</code>
     * @return The freeMemory.
     */
    public double getFreeMemory() {
      return freeMemory_;
    }
    /**
     * <code>double freeMemory = 11;</code>
     * @param value The freeMemory to set.
     * @return This builder for chaining.
     */
    public Builder setFreeMemory(double value) {
      
      freeMemory_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>double freeMemory = 11;</code>
     * @return This builder for chaining.
     */
    public Builder clearFreeMemory() {
      
      freeMemory_ = 0D;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:org.opendedup.grpc.SystemInfo)
  }

  // @@protoc_insertion_point(class_scope:org.opendedup.grpc.SystemInfo)
  private static final org.opendedup.grpc.SystemInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.opendedup.grpc.SystemInfo();
  }

  public static org.opendedup.grpc.SystemInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SystemInfo>
      PARSER = new com.google.protobuf.AbstractParser<SystemInfo>() {
    @java.lang.Override
    public SystemInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new SystemInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SystemInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SystemInfo> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.opendedup.grpc.SystemInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

